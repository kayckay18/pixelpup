
/*
 * ----------------------
 * INITIALIZE
 * ----------------------
 */

/*!
 * Initialize.css (v1.3.1) is a complete and customizable collection of CSS best practices based on Normalize.css and HTML5 Boilerplate.
 * http://jeroenoomsnl.github.io/initialize-css
 *
 * HTML5 Boilerplate: https://github.com/h5bp/html5-boilerplate
 * Normalize.css: http://github.com/necolas/normalize.css
 */
/* ==========================================================================
   General
   ========================================================================== */
/**
 * 1. Set default font family to $initialize-font-family (default: sans-serif)
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom
 * 3. Configurable defaults
 */
html {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  font-family: sans-serif;
  /* 1 */
  line-height: 1.4;
  /* 3 */
  font-size: 1em;
  /* 3 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
 * Remove default margin
 */
body {
  margin: 0;
}

/*
 * Inheriting box-sizing
 * https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*, *:before, *:after {
  -moz-box-sizing: inherit;
       box-sizing: inherit;
}

/* ==========================================================================
   HTML5 display defenitions
   ========================================================================== */
/*
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
details,
main,
summary {
  display: block;
}

/*
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  vertical-align: baseline;
  /* 2 */
}

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* ==========================================================================
   Links
   ========================================================================== */
/*
 * Remove the gray background color from active links in IE 10.
 */
/*
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* ==========================================================================
   Text-level semantics
   ========================================================================== */
/*
 * Address inconsistent styling of `abbr[title]`.
 * 1. Correct styling in Firefox 39 and Opera 12.
 * 2. Correct missing styling in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/*
 * Address inconsistent styling of b and strong.
 * 1. Correct duplicate application of `bolder` in Safari 6.0.2.
 * 2. Correct style set to `bold` in Edge 12+, Safari 6.2+, and Chrome 18+.
 */
b,
strong {
  font-weight: inherit;
  /* 1 */
}

b,
strong {
  font-weight: bolder;
  /* 2 */
}

/*
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/*
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/*
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/*
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */
/*
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* ==========================================================================
   Grouping content
   ========================================================================== */
/*
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/*
 * Address inconsistent styling of `hr`.
 * 1. Correct `box-sizing` set to `border-box` in Firefox.
 * 2. Correct `overflow` set to `hidden` in IE 8/9/10/11 and Edge 12.
 */
hr {
  -moz-box-sizing: content-box;
       box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/*
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/*
 * 1. Correct inheritance and scaling of font-size for preformatted text.
 * 2. Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* ==========================================================================
   Forms
   ========================================================================== */
/*
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/*
 * 1. Correct font properties not being inherited.
 * 2. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
}

/*
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/*
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/*
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/*
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
 * Restore focus style in Firefox 4+ (unset by a rule above)
 */
button:-moz-focusring,
input:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/*
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/*
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/*
 * Address `appearance` set to `searchfield` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
}

/*
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/*
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/*
 * Restore font weight (unset by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* ==========================================================================
   HTML5 Boilerplate optimizations
   ========================================================================== */
/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}
::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical;
}

/* ==========================================================================
   Optional configurations
   ========================================================================== */
/*
 * Headings
 */
/*
 * Block elements
 */
/* ==========================================================================
   Print styles
   ========================================================================== */
grid.css
/*
 * ----------------------
 * RESPONSIVE GRID
 * ----------------------
 */



/*
 * ----------------------
 * BOX SIZING
 * ----------------------
 */

/*
 * Keep my container the same size when I add a border or padding.
 * Push my content inwards, as opposed to expanding my container outwards.
 */
html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
}



/*
 * ----------------------
 * CONTAINER
 * ----------------------
 */

/*
 * A container holds all elements and controls the page’s maximum width.
 * Using a container will make designing for responsive easier!
 */
.container {
  margin-left: auto;
  margin-right: auto;
  max-width: 1140px; /* This should the maximum width of your website content! Change at your leisure... */
  overflow: auto;
  padding: 1em 2em;
}

/* ...or use the .container-fluid class instead, to make the content always stretch to be full-width. */
.container.fluid {
  max-width: none;
}



/*
 * ----------------------
 * ROW
 * ----------------------
 */

/*
 * We wrap our columns inside rows to prevent other elements from stacking next to them, i.e. clearing issues.
 * We fix these by applying a version of the popular "clearfix" (http://cssmojo.com/the-very-latest-clearfix-reloaded/)
 * to our row class, which will contain floated column elements.
 * We also use negative margins to make sure nested rows take up the full-width of their containers.
 */
.row {
  /* margin-left: -1em;
  margin-right: -1em; */
}
.row:after {
  clear: both;
  content: " ";
  display: block;
}

/* Add some vertical rhythm (space between each row) by default */
.row + .row {
  /* margin-top: 1em; */
}



/*
 * ----------------------
 * COLUMN
 * ----------------------
 */

/*
 * Use float to line up our grid elements next to each other.
 * By default (i.e. mobile devices), make all columns 100% wide with some padding.
 */
.column {
  float: left;
  padding: 1em;
  width: 100%;
}

/* Add some vertical rhythm (space between each column) by default, only on mobile. */
.column + .column {
  margin-top: 1em;
}
@media (min-width: 769px) {
  .column + .column {
    margin-top: 0;
  }
}



/*
 * ----------------------
 * COLUMN LAYOUT
 * ----------------------
 */

/*
 * On all screens 769px and larger (landscape tablets + desktops), enable a grid layout with different width columns.
 */
@media (min-width: 769px) {

  .column.three-fourths { width: 75%; }
  .column.two-thirds    { width: 66.666%; }
  .column.one-half      { width: 50%; }
  .column.one-third     { width: 33.333%; }
  .column.one-fourth    { width: 25%; }
  .column.one-sixth     { width: 16.666%; }

}



/*
 * ----------------------
 * COLUMN OFFSET
 * ----------------------
 */

/*
 * Offset a grid element, by (virutally) creating an empty one.
 */
 @media (min-width: 769px) {

  .column.offset-three-fourths  { margin-left: 75%; }
  .column.offset-two-thirds     { margin-left: 66.666%; }
  .column.offset-one-half       { margin-left: 50%; }
  .column.offset-one-third      { margin-left: 33.333%; }
  .column.offset-one-fourth     { margin-left: 25%; }
  .column.offset-one-sixth      { margin-left: 16.666%; }

}



/*
 * ----------------------
 * EXTRAS
 * ----------------------
 */

/*
 * flow-opposite
 * ----------------------
 * Add .flow-opposite to columns where you want a column on the right on desktop to display first on mobile.
 */
.column.flow-opposite { float: right; }

/*
 * no-padding
 * ----------------------
 * Enable a grid without padding inside columns by adding '.no-padding' to a '.container' element.
 */
.no-padding .column {
  padding: 0;
}

/*
 * no-margin
 * ----------------------
 * Enable a grid without margin between rows (everywhere) and columns (on mobile) by adding '.no-margin' to the '.container'.
 */
.no-margin .row,
.no-margin .column {
  margin-top: 0;
}
grid-tutorial.css
/*
 * ----------------------
 * GRID - TUTORIAL STYLES
 * ----------------------
 */

.tutorial-style {
  background-color: #497bad;
  color: #fff;
  font-family: 'Lato', sans-serif;
  padding-bottom: 6em;
  text-align: center;
}

.tutorial-style:before {
  background: rgba(225, 255, 255, 0.1);
  border-bottom: 2px solid rgba(255, 255, 255, 0.2);
  display: block;
  font-style: italic;
  padding: 1em;
  text-align: center;
}

.tutorial-style section {
  border-top: none;
  overflow: auto;
}

.tutorial-style section + section {
  margin-top: 6em;
}

@media (min-width: 1025px) {
  .tutorial-style .container {
    border: 2px dashed rgba(255, 255, 255, 0.5);
  }
}

.tutorial-style .column {
  background: rgba(225, 255, 255, 0.1);
  border: 2px solid rgba(255, 255, 255, 0.2);
}

.tutorial-style .no-padding .column {
  padding: 0;
}

.tutorial-style h1 {
  background: white;
  color: #497bad;
  font-size: 16px;
  letter-spacing: 6px;
  margin: 0 0 6em;
  padding: 3em 0;
  text-transform: uppercase;
}

.tutorial-style h2 {
  color: white;
  font-size: 3em;
  font-weight: 100;
  letter-spacing: 1px;
  margin: 1em 0;
  text-transform: uppercase;
}

.tutorial-style .button a {
  background: white;
  color: #333;
  display: block;
  margin: 1em;
  padding: 1em;
  text-align: center;
  text-decoration: none;
  transition: 0.3s ease all;
}

@media (min-width: 1025px) {
  .tutorial-style .button a {
    display: inline-block;
  }
}

.tutorial-style .button a:first-of-type {
  background: transparent;
  border: 1px solid white;
  color: white;
}

.tutorial-style .button a:hover {
  opacity: 0.7
}
custom.css
/*
 * ----------------------
 * CUSTOM STYLES
 * ----------------------
 */

/*
 * Add as many @media query break points as you like, trying to keep in mind common device screen widths.
 */
@media (min-width: 769px) and (max-width: 1024px) {
  /* You custom styles here */
  body:before { content: "Show me for landscape oriented iPads only."; }
}
@media (max-width: 320px) {
  /* You custom styles here */
  body:before { content: "Show me for portrait oriented iPhone 4 / 5 only."; }
}
View the Example

Further Reading
A Book Apart: Mobile First
A Book Apart: Responsive Web Design
Beginner's Guide to Responsive Web Design
Box-sizing: Border-box FTW
Don't Forget the Viewport Meta Tag
The Many Faces of ‘Mobile First'
Understanding the Humble Clearfix
References
Android Fragmentation Visualized
Animate.css
Box Model
Chrome Developer Tools
Code samples by GitHub Gist
Internet Explorer Box Model
Progressive Enhancement
